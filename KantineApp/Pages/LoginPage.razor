@page "/LoginPage/{target:alpha?}"
@using KantineApp.Services
@inject ILoginService loginService
@inject NavigationManager navManager
@inject UserSessionService userSession

<div style="height: 100%; display: flex; align-items: center; justify-content: center; background-color: #ffffff;">
    <div class="card shadow-lg" style="max-width: 400px; width: 100%;">
        <div class="card-body p-4">
            <h3 class="card-title text-center mb-4">Welcome Back!</h3>
            <p class="text-muted text-center">Please login to continue</p>

            <!-- Brugerens inputfelt for brugernavn -->
            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <InputText id="username" @bind-Value="username" placeholder="Enter your username"
                           class="form-control rounded-pill" />
            </div>

            <!-- Brugerens inputfelt for kodeord -->
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" @bind-Value="password" type="password"
                           placeholder="Enter your password" class="form-control rounded-pill"
                           autocomplete="off" maxlength="128" />
            </div>

            <!-- Login-knap og opret konto-knap -->
            <div class="d-grid gap-2">
                <button @onclick="OnClickLogin" class="btn btn-primary rounded-pill" disabled="@isLoading">
                    @(isLoading ? "Logging in..." : "Login")
                </button>
                <button @onclick="NavigateToCreateUser" class="btn btn-outline-secondary rounded-pill">
                    Create New Account
                </button>
            </div>

            <!-- Fejlmeddelelse, hvis login mislykkes -->
            @if (!string.IsNullOrEmpty(errorText))
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @errorText
                </div>
            }
        </div>
    </div>
</div>

@code {
    // Naviger til opret konto-siden
    private void NavigateToCreateUser()
    {
        navManager.NavigateTo("/CreateUser");
    }

    string username = ""; 
    string password = ""; 
    string errorText = ""; 
    bool isLoading = false;

    [Parameter]
    public string target { get; set; } = "/"; // Target page efter login

    // Login-metoden, som bliver kaldt ved klik p√• login-knappen
    private async Task OnClickLogin()
    {
        if (string.IsNullOrWhiteSpace(username) || string.IsNullOrWhiteSpace(password))
        {
            errorText = "Username and password cannot be empty.";
            return;
        }

        isLoading = true;
        errorText = "";

        var success = await loginService.Login(username, password);

        if (success)
        {
            userSession.SetLoginStatus(true);
            navManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            errorText = "Invalid login. Please check your credentials and try again.";
        }

        isLoading = false;
    }
    }
}
