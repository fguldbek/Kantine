    @page "/mypage"
    @inject HttpClient Http
    @inject NavigationManager NavManager
    @using Blazored.LocalStorage
    @inject ILocalStorageService localStorage
    @using Core.Models
    @using KantineApp.Services
    @inject ILoginService LoginService


    @if (isLoggedIn)
    {
        <div style="display: flex; flex-direction: column; align-items: center; background-color: #f0f2f5; padding: 30px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; min-height: 100vh;">
            <div style="width: 100%; background-color: #0078d4; color: white; text-align: center; padding: 25px 20px; border-radius: 12px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);">
                <div style="display: flex; flex-direction: column; align-items: center;">
                    @if (employeeList != null)
                    {
                        <h2 style="font-size: 1.9rem; margin: 0;">@employeeList.Name</h2>
                        <p style="font-size: 1.1rem; color: #dcdcdc;">@employeeList.Email</p>
                    }
                    else
                    {
                        <h2 style="font-size: 1.9rem; margin: 0;">Loading...</h2>
                        <p style="font-size: 1.1rem; color: #dcdcdc;">Please wait while we load your information.</p>
                    }
                </div>
            </div>

            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr)); gap: 30px; width: 100%; margin-top: 40px;">

                <!-- View Assignments Section -->
                <div style="background: white; border-radius: 12px; padding: 25px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); transition: transform 0.2s ease; cursor: pointer;" @onclick="GoToAssignments">
                    <h3 style="margin-top: 0; margin-bottom: 15px; color: #0078d4;">View Assignments</h3>
                    <p style="font-size: 1rem; color: #555;">Click here to view your current assignments and tasks.</p>
                </div>

                <!-- Edit Profile Section -->
                <div style="background: white; border-radius: 12px; padding: 25px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); transition: transform 0.2s ease; cursor: pointer;" @onclick="GoToProfile">
                    <h3 style="margin-top: 0; margin-bottom: 15px; color: #0078d4;">View Profile</h3>
                    <p style="font-size: 1rem; color: #555;">View your personal information and update your profile.</p>
                </div>

                <!-- View Inbox Section -->
                <div style="background: white; border-radius: 12px; padding: 25px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); transition: transform 0.2s ease; cursor: pointer;" @onclick="GoToInbox">
                    <h3 style="margin-top: 0; margin-bottom: 15px; color: #0078d4;">View Inbox</h3>
                    <p style="font-size: 1rem; color: #555;">Check your messages and stay updated with notifications.</p>
                </div>
            
            </div>

        </div>
    }
        else 
        {
            <p>You must be logged in to view this site.</p>
        }

    @code {
        private string serverUrl = "http://localhost:5002";
        private Employee? employeeList;
        
        private bool isLoggedIn = false;

        public int? UserId;

        public async Task GetUserId()
        {
            var user = await localStorage.GetItemAsync<Employee>("user");
            if (user != null)
            {
                UserId = user.Id;
                isLoggedIn = true;
                Console.WriteLine($"User found: UserId = {UserId}");
            }
            else
            {
                UserId = null;
                isLoggedIn = false;
                Console.WriteLine("User not found in localStorage");
            }
        }

        protected override async Task OnInitializedAsync()
        {
            await GetUserId();
            
            var user = await LoginService.GetUserLoggedIn();
            if (user == null)
            {
                NavManager.NavigateTo("LoginPage/mypage");
            }
            employeeList = await Http.GetFromJsonAsync<Employee>($"{serverUrl}/api/employee/GetById/{UserId}");
        }

        private void GoToAssignments()
        {
            NavManager.NavigateTo("/user");
        }

        private void GoToProfile()
        {
            NavManager.NavigateTo("/profile/view");
        }

        private void GoToInbox()
        {
            NavManager.NavigateTo("/myinbox");
        }

        private void GoToSkills()
        {
            NavManager.NavigateTo("/skills");
        }
        
        
        
        
        
    }
