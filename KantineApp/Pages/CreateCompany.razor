@page "/CreateCompany"
@using Core.Models
@inject HttpClient Http
@using Blazored.LocalStorage
@using KantineApp.Services
@inject ILocalStorageService localStorage
@inject ILoginService LoginService
@inject NavigationManager navManager


@if (isLoggedIn && user?.Role == 1 || user?.Role == 2)
{
<PageTitle>Add Company</PageTitle>

<div class="container my-4">
    <div class="card shadow-sm p-4">
        <h1 class="card-title mb-4">Add Company</h1>

        <EditForm Model="@NewCompany" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger mb-3" />

            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <InputText id="Name" @bind-Value="NewCompany.Name" class="form-control" placeholder="Enter company name" />
            </div>

            <div class="mb-3">
                <label for="Description" class="form-label">Description</label>
                <InputText id="Description" @bind-Value="NewCompany.Description" class="form-control" placeholder="Enter company description" />
            </div>

            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <InputText id="Email" @bind-Value="NewCompany.Email" class="form-control" placeholder="Enter company email" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Create</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(SuccessMessage))
        {
            <div class="alert alert-success mt-4">@SuccessMessage</div>
        }
    </div>
</div>
}
else 
{
    <p>You donâ€™t have access to this page.</p>
}

@code {
    private Company NewCompany = new();
    private string SuccessMessage;
    
    private bool isLoggedIn = false;
    
    public int? UserId;
    
    private Employee user;

    
    public async Task GetUserId()
    {
        var user = await localStorage.GetItemAsync<Employee>("user");
        if (user != null)
        {
            UserId = user.Id;
            isLoggedIn = true;
        }
        else
        {
            UserId = null;
            isLoggedIn = false;
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        // Attempt to get the user from the LoginService
        user = await LoginService.GetUserLoggedIn();

        if (user == null) // User not logged in, redirect immediately
        {
            isLoggedIn = false;
            navManager.NavigateTo("LoginPage/CreateCompany");
            return; // Prevent further execution
        }

        // User is logged in
        isLoggedIn = true;

        // Fetch user details from localStorage
        await GetUserId();
    }

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("http://localhost:5002/api/companies/add", NewCompany);
        if (response.IsSuccessStatusCode)
        {
            SuccessMessage = "Company added successfully!";
            NewCompany = new(); // Reset form
        }
        else
        {
            SuccessMessage = "Failed to add company.";
        }
    }
}