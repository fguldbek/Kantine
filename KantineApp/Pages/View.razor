@page "/profile/view"

@inject HttpClient Http
@inject NavigationManager NavManager
@using Blazored.LocalStorage
@inject ILocalStorageService localStorage
@using Core.Models
@using KantineApp.Services
@inject ILoginService LoginService
@inject ServerUrl ServerUrl;


<!--Tjekker om brugeren er logget ind -->
@if (isLoggedIn)
{
    <div style="display: flex; flex-direction: column; align-items: center; background-color: #f0f2f5; padding: 30px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; min-height: 100vh;">
        <div style="width: 100%; background-color: #0078d4; color: white; text-align: center; padding: 25px 20px; border-radius: 12px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);">
            <div style="display: flex; flex-direction: column; align-items: center;">
                <!--If statement der tjekker employeeList -->
                @if (employeeList == null)
                {
                    //Display hvis emplyeeList er null
                    <h2 style="font-size: 1.9rem; margin: 0;">Loading...</h2>
                    <p style="font-size: 1.1rem; color: #dcdcdc;">Please wait while we load your information.</p>
                }
                else
                {
                    //Display for navn og email.
                    <h2 style="font-size: 1.9rem; margin: 0;">@employeeList.Name</h2>
                    <p style="font-size: 1.1rem; color: #dcdcdc;">@employeeList.Email</p>
                }
            </div>
        </div>

        <div style="background: white; border-radius: 12px; padding: 30px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); width: 100%; max-width: 800px; margin-top: 40px;">
            <h3 style="color: #0078d4; font-size: 1.7rem; margin-bottom: 20px;">Profile Details</h3>

            <!--Styling for successMessage -->
            @if (successMessage != null)
            {
                <div style="color: green; background-color: #e6ffe6; border: 1px solid #b3ffb3; padding: 10px; border-radius: 6px; margin-bottom: 20px;">
                    @successMessage
                </div>
            }

            <!--If isEditing er true, så bliver det displayet med input boxes, hvor user kan skrive og ændre dataen-->
            @if (isEditing)
            {
                <EditForm Model="employeeList" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger mb-3" />

                    <div style="margin-bottom: 15px;">
                        <label for="name"><strong>Name: </strong></label>
                        <InputText id="name" @bind-Value="employeeList.Name" class="form-control" />
                    </div>
                    <div style="margin-bottom: 15px;">
                        <label for="Password"><strong>Password: </strong></label>
                        <InputText id="Password" @bind-Value="employeeList.Password" class="form-control" />
                    </div>
                    <div style="margin-bottom: 15px;">
                        <label for="email"><strong>Email: </strong></label>
                        <InputText id="email" @bind-Value="employeeList.Email" class="form-control" />
                    </div>
                    <div style="margin-bottom: 15px;">
                        <label for="phone"><strong>Phone: </strong></label>
                        <InputText id="phone" @bind-Value="employeeList.Number" class="form-control" />
                    </div>

                    <div style="text-align: center; margin-top: 30px;">
                        <button style="background-color: #0078d4; color: white; padding: 12px 25px; border: none; border-radius: 6px; cursor: pointer; font-size: 1rem;" type="submit">
                            Save Changes
                        </button>
                        <button style="background-color: #6c757d; color: white; padding: 12px 25px; border: none; border-radius: 6px; cursor: pointer; font-size: 1rem;" @onclick="CancelEdit">
                            Cancel
                        </button>
                    </div>
                </EditForm>
            }
            //Hvis det er false, så bliver dataen displayet normalt, uden mulighed for, at ændre dataen.
            else
            {
                <div style="margin-bottom: 15px;">
                    <strong>Name: </strong> @employeeList?.Name
                </div>
                <div style="margin-bottom: 15px;">
                    <strong>Password: </strong> *****
                </div>
                <div style="margin-bottom: 15px;">
                    <strong>Email: </strong> @employeeList?.Email
                </div>
                <div style="margin-bottom: 15px;">
                    <strong>Phone: </strong> @employeeList?.Number
                </div>

                <div style="text-align: center; margin-top: 30px;">
                    <button style="background-color: #0078d4; color: white; padding: 12px 25px; border: none; border-radius: 6px; cursor: pointer; font-size: 1rem;" @onclick="EditProfile">
                        Edit Profile
                    </button>
                </div>
            }
        </div>
    </div>
}
else 
{
    <!-- Besked hvis brugeren ikke er logget ind -->
    <p>You must be logged in to view this site.</p>
}

@code {
    private Employee? employeeList;
    private bool isEditing = false;
    private bool isLoggedIn = false;

    public int? UserId;
    private string? successMessage; // Ny beskedvariabel for UX feedback

    // Hent brugerens ID fra localStorage
    public async Task GetUserId()
    {
        var user = await localStorage.GetItemAsync<Employee>("user");
        if (user != null)
        {
            UserId = user.Id;
            isLoggedIn = true;
        }
        else
        {
            UserId = null;
            isLoggedIn = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var user = await LoginService.GetUserLoggedIn();
        if (user == null)
        {
            // Hvis brugeren ikke er logget ind, sendes de til login-siden
            NavManager.NavigateTo("LoginPage/profile/view");
        }
        await GetUserId();
        employeeList = await Http.GetFromJsonAsync<Employee>($"{ServerUrl.serverUrl}/api/employee/GetById/{UserId}");
    }

    // Aktiverer redigering af profil
    private void EditProfile()
    {
        isEditing = true;
    }

    // Håndterer opdatering af profiloplysninger
    private async Task HandleValidSubmit()
    {
        if (employeeList != null)
        {
            var response = await Http.PutAsJsonAsync($"{ServerUrl.serverUrl}/api/employee/update", employeeList);
            if (response.IsSuccessStatusCode)
            {
                isEditing = false;
                successMessage = "Your changes have been saved successfully!";
            }
            else
            {
                successMessage = "Failed to save changes. Please try again.";
                successMessage = null;
            }
        }
    }

    // Annullerer redigering
    private void CancelEdit()
    {
        isEditing = false;
    }
}
