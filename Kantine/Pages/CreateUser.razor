@page "/CreateUser"
@using Core.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="container my-4">
    <div class="card shadow-sm p-4">
        <h1 class="card-title mb-4">Create a Login</h1>

        <EditForm Model="@Employee" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger mb-3" />

            <!-- Name Input -->
            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <InputText id="Name" @bind-Value="Employee.Name" class="form-control" placeholder="Enter name" />
            </div>

            <!-- Password Input -->
            <div class="mb-3">
                <label for="Password" class="form-label">Password</label>
                <InputText id="Password" @bind-Value="Employee.Password" class="form-control" type="password" placeholder="Enter password" />
            </div>

            <!-- Number Input -->
            <div class="mb-3">
                <label for="Number" class="form-label">Number</label>
                <InputText id="Number" @bind-Value="Employee.Number" class="form-control" placeholder="Enter phone number" />
            </div>

            <!-- Email Input -->
            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <InputText id="Email" @bind-Value="Employee.Email" class="form-control" placeholder="Enter email" />
            </div>

            <!-- Skills Dropdown -->
            <div class="mb-3">
                <label for="Skills" class="form-label">Skills</label>
                <InputSelect id="Skills" @bind-Value="Employee.Skills" class="form-select">
                    <option value="">Select a skill</option>
                    @foreach (var skill in Skills)
                    {
                        <option value="@skill">@skill</option>
                    }
                </InputSelect>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary w-100">Add</button>
        </EditForm>
    </div>
</div>

@code {
    // Predefined skill list
    private List<string> Skills = new List<string> { "Dart", "Airball", "Sudoku", "Bingo" };

    // Employee model to bind form data
    private Employee Employee = new();

    // API server URL
    private string serverUrl = "http://localhost:5002";

    // Handle form submission
    public async Task HandleValidSubmit()
    {
        await AddEmployeeAsync();
        ResetForm();
    }

    // Add employee via API
    private async Task AddEmployeeAsync()
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"{serverUrl}/api/employee/add", Employee);
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Employee added successfully.");
            }
            else
            {
                Console.WriteLine($"Failed to add employee. Status: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    // Reset the form
    private void ResetForm()
    {
        Employee = new();
    }
}
